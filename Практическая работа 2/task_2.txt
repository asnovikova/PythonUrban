class GreenZoneIndex:
    def __init__(self, territory_name, territory_area, green_zones):
        """
        :param territory_name: Название территории
        :param territory_area: Площадь территории
        :param green_zones: Список площадей парков
        """
        # TODO все аргументы конструктора записать в атрибуты экземпляра класса
        
        self.green_index = None  # индекс озеленения
        self.territory_name = territory_name
        self.territory_area = territory_area
        self.green_zones = green_zones
        

        total_green_zones = sum(green_zones)
        self.total_green_zones = total_green_zones


        self.green_index = self.calculate_green_index()

        # TODO посчитать индекс озеленения с помощью метода calculate_green_index
    def calculate_green_index(self):
        """
        Метод для вычисления индекса озеленения.
        Индекс рассчитывается как отношение площади всех парков к площади территории
        """
        return round((self.total_green_zones / self.territory_area) * 100, 2)


list_territories = [
    {
        "territory_name": "Пушкин",
        "territory_area": 28676,
        "green_zones": [302, 487, 420, 325, 471, 363, 404]
    },
    {
        "territory_name": "Павловск",
        "territory_area": 21025,
        "green_zones": [360, 375, 223, 258, 345, 296, 303]
    },
    {
        "territory_name": "Петергоф",
        "territory_area": 44274,
        "green_zones": [364, 447, 438, 223, 336, 431, 442]
    },
]

list_green_index = []


for territory in list_territories:
  
  green_index_2 = (GreenZoneIndex(territory_name = territory["territory_name"], territory_area = territory["territory_area"], green_zones = territory["green_zones"]))
  x = green_index_2.green_index
  list_green_index.append(x)

print(list_green_index)